name: Deploy to AWS

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches: [main]

jobs:
  deploy-aws:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Deploy to Elastic Beanstalk
      run: |
        # Create deployment package
        zip -r deploy.zip . -x "*.git*" "node_modules/*" "tests/*" "coverage/*"
        
        # Deploy to AWS Elastic Beanstalk
        aws elasticbeanstalk create-application-version \
          --application-name ai-article-generator \
          --version-label ${{ github.sha }} \
          --source-bundle S3Bucket=${{ secrets.AWS_S3_BUCKET }},S3Key=deploy-${{ github.sha }}.zip
        
        aws s3 cp deploy.zip s3://${{ secrets.AWS_S3_BUCKET }}/deploy-${{ github.sha }}.zip
        
        aws elasticbeanstalk update-environment \
          --application-name ai-article-generator \
          --environment-name ${{ secrets.AWS_EB_ENVIRONMENT }} \
          --version-label ${{ github.sha }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy-heroku:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        env_file: ".env.production"
      env:
        HD_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        HD_OPENAI_API_BASE_URL: ${{ secrets.OPENAI_API_BASE_URL }}
        HD_OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
        HD_NODE_ENV: production
